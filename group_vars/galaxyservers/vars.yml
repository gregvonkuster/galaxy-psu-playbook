---

supervisor_configs:
  - galaxy.conf

# General dependencies
galaxyservers_packages:
  - gcc


# Conda
miniconda_prefix: "{{ galaxy_instance_root }}/conda"
miniconda_version: 4.10.3
miniconda_channels:
  - conda-forge
  - defaults
miniconda_conda_environments:
  __python@3.9:
    packages:
      - python=3.9


# Galaxy
#galaxy_create_user: false
galaxy_separate_privileges: false
#galaxy_manage_paths: false
galaxy_layout: root-dir
galaxy_root: "{{ galaxy_instance_root }}/galaxy"
galaxy_restart_handler_name: supervisorctl restart galaxy

# This is used by the nginx template and have to be set since the nginx role doesn't run in the same playbook/after the galaxy role
galaxy_server_dir: "{{ galaxy_root }}/server"
# TODO: These should't need to be set if the role can be used to manage paths instead of doing it as a pre-task in the deps playbook
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_mutable_config_dir: "{{ galaxy_root }}/var/config"
galaxy_log_dir: "{{ galaxy_root }}/var/log"
galaxy_reports_config_file: "{{ galaxy_config_dir }}/reports.yml"

galaxy_precreate_dirs:
  - "{{ galaxy_config_dir }}"
  - "{{ galaxy_mutable_config_dir }}"
  - "{{ galaxy_log_dir }}"
  # Does not need to be precreated but this ensures its permissions do not allow world reading
  - "{{ galaxy_instance_root }}/objects"

# TODO: https://github.com/galaxyproject/ansible-galaxy/issues/137
__galaxy_user_group: "{{ galaxy_instance_group }}"

galaxy_commit_id: release_21.09
galaxy_force_checkout: true

galaxy_virtualenv_command: "{{ miniconda_prefix }}/envs/__python@3.9/bin/python3 -m venv"

galaxy_job_metrics_plugins:
  - type: core
  - type: cpuinfo
  - type: meminfo
  - type: uname
  - type: cgroup
  - type: hostname

# Used by the job_conf.yml template
galaxy_job_conf_singularity_volumes:
  - "$galaxy_root:ro"
  - "$tool_directory:ro"
  - "$default_file_path:ro"
  - "{{ galaxy_mutable_data_dir }}/tool-data:ro"
  - "$working_directory:rw"
  - "$job_directory:rw"
  #- "{{ galaxy_new_file_path }}:ro"
  - "{{ miniconda_prefix }}:ro"
  - "{{ galaxy_venv_dir }}:ro"
  - "/cvmfs/data.galaxyproject.org:ro"

galaxy_config_templates:
  - src: templates/galaxy/config/reports.yml.j2
    dest: "{{ galaxy_reports_config_file }}"
  - src: templates/galaxy/config/job_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.job_config_file }}"


# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
  # rabbitmq in container
  - 999
certbot_post_renewal: |
  systemctl restart nginx || true
  docker restart rabbitmq || true
certbot_domains:
  - "{{ galaxy_instance_hostname }}"
certbot_agree_tos: --agree-tos


# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
nginx_ssl_role: usegalaxy_eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem
