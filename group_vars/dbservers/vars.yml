---

dbservers_packages:
  - python3-psycopg2

# PostgreSQL
postgresql_conf:
  - listen_addresses: "'*'"
  - ssl: "off"

postgresql_pg_hba_conf:
  - "host all all {{ lookup('dig', galaxy_instance_hostname) }}/32 md5"

postgresql_objects_users:
  - name: "{{ galaxy_user.name }}"
    password: "{{ galaxy_postgresql_password }}"

postgresql_objects_databases:
  - name: "galaxy_{{ galaxy_instance_name }}"
    owner: "{{ galaxy_user.name }}"


# PostgreSQL Backups
# In order to control the group of this dir, it was created by hand
postgresql_create_backup_dir: false
postgresql_backup_dir: "{{ corral_root }}/backups/postgresql/{{ galaxy_instance_name }}"

# Ensure backup files are written as the appropriate group, for quota purposes
postgresql_archive_wal_rsync_args: '--ignore-existing -pt --chown=postgres:{{ galaxy_instance_group }} --info=skip1'
postgresql_backup_rsync_backup_opts: '-rpt --chown=postgres:{{ galaxy_instance_group }}'
# Due to the way quotas work on Corral, files must be *created* with the correct group, it is not sufficient to chgrp them after
postgresql_backup_command: >-
  /usr/bin/sg {{ galaxy_instance_group }} -c
  "/usr/bin/python3 {{ postgresql_backup_local_dir | quote }}/bin/backup.py
  {{ '--rsync-connect-opts ' ~ (postgresql_backup_rsync_connect_opts | quote) if postgresql_backup_rsync_connect_opts else '' }}
  --rsync-backup-opts {{ postgresql_backup_rsync_backup_opts | quote }}
  --keep {{ postgresql_backup_keep | quote }}
  {{ '--pg-bin-dir ' ~ __postgresql_pgdg_bin_dir if ansible_os_family == 'RedHat' else '' }}
  --backup --clean-archive {{ postgresql_backup_dir | quote }}"
