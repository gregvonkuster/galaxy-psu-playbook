---
# Install/Manage Galaxy dependencies

- name: Early setup tasks for all hosts
  hosts: galaxypsuvms
  tasks:
    # Obviously, the first person to run this has to manually install their key, if it's not set up in the VM
    # bootstrapping process
    - name: Add to root ssh keys
      authorized_key:
        user: root
        key: "{{ item }}"
      loop: "{{ root_authorized_ssh_keys }}"
    - name: Install Packages
      package:
        name: "{{ all_packages }}"
    # TODO: this hack can be removed if the dev user is added to LDAP
    - name: Create dev project group
      group:
        name: G-824019
        gid: 824019
        local: true
    # TODO: same
    - name: Create local Galaxy dev user
      user:
        name: galaxydev
        uid: 877997
        group: G-824019
        comment: Galaxy Development Server
        shell: /bin/bash
        create_home: true
        system: true
    - name: Mount Corral
      mount:
        path: "{{ corral_root }}"
        src: "{{ corral_mount_src }}"
        fstype: nfs
        opts: "{{ corral_mount_opts }}"
        state: mounted
    - name: Configure Postfix if necessary
      template:
        src: templates/postfix/main.cf.j2
        dest: /etc/postfix/main.cf
        force: false
        mode: 0644
      notify:
        - start postfix
    - name: Create Postfix aliases if necessary
      command: newaliases
      args:
        creates: /etc/aliases.db
  handlers:
    - name: start postfix
      service:
        name: postfix
        state: started
  tags:
    - system

- name: PostgreSQL
  hosts: dbservers
  pre_tasks:
    - name: Install Dependencies
      package:
        name: "{{ all_packages + dbservers_packages }}"
  roles:
    - role: galaxyproject.postgresql
    - role: natefoo.postgresql_objects
      become: true
      become_user: postgres
  post_tasks:
    # The postgres user needs to be added to the appropriate group(s) used for Corral quotas
    # The group is in LDAP but has to exist locally to be able to add a local user to it
    - name: Create local project group
      group:
        name: "{{ galaxy_instance_group }}"
        gid: "{{ galaxy_instance_group[2:] }}"
        local: true
    - name: Add postgres user to project group
      user:
        name: postgres
        groups: "{{ galaxy_instance_group }}"
        local: true
        system: true
  tags:
    - postgres

- name: Slurm
  # Slurm is installed on everything, even if just as a client
  hosts: galaxypsuvms
  roles:
    - role: galaxyproject.slurm
  tags:
    - slurm

- name: Slurm Exec Hosts
  hosts: slurmexechosts
  roles:
    - role: gantsign.golang
    - role: cyverse-ansible.singularity
  tags:
    - slurm
    - singularity

- name: DRMAA for Slurm
  hosts: galaxyservers
  roles:
    - role: galaxyproject.repos
  post_tasks:
    - name: Install slurm-drmaa
      package:
        name: slurm-drmaa1
  tags:
    - slurm

- name: Galaxy Initial Setup
  hosts: galaxyservers
  pre_tasks:
    # Pulled out of galaxyproject.galaxy until we make a collection out of its parts
    - name: Install Dependencies
      package:
        name: "{{ all_packages + galaxyservers_packages }}"
    - name: Create Galaxy user
      user:
        name: "{{ galaxy_user.name }}"
        uid: "{{ galaxy_user.uid }}"
        group: "{{ galaxy_group.name }}"
        comment: "{{ galaxy_user.comment }}"
        create_home: "{{ galaxy_user.create_home }}"
        shell: "{{ galaxy_user.shell }}"
        system: "{{ galaxy_user.system }}"
    - name: Create Galaxy directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 02770
      loop: "{{ galaxy_precreate_dirs }}"
      become: true
      become_user: "{{ galaxy_user.name }}"
  roles:
    - role: galaxyproject.miniconda
      become: yes
      become_user: "{{ galaxy_user.name }}"
    - role: galaxyproject.tusd
  tags:
    - galaxy

- name: NGINX
  hosts: galaxyservers
  roles:
    - role: galaxyproject.nginx
  post_tasks:
    - name: Set nginx runtime group
      lineinfile:
        line: 'user www-data {{ galaxy_instance_group }};'
        regexp: '^user .*;$'
        path: /etc/nginx/nginx.conf
      notify:
        - restart nginx
  tags:
    - nginx

- name: CVMFS
  hosts: galaxypsuvms
  roles:
    - role: galaxyproject.cvmfs
  tags:
    - cvmfs

- name: RabbitMQ
  hosts: rabbitmqservers
  pre_tasks:
    - name: Install python3-docker
      apt:
        name: python3-docker
  roles:
    - role: geerlingguy.docker
    - role: usegalaxy_eu.rabbitmqserver

# NOTE: this would fail the first time stack is run if Galaxy is not yet installed
- name: Galaxy systemd
  hosts: galaxyservers
  roles:
    - role: galaxyproject.galaxy
      galaxy_manage_clone: no
      galaxy_manage_static_setup: no
      galaxy_manage_mutable_setup: no
      galaxy_manage_database: no
      galaxy_fetch_dependencies: no
      galaxy_manage_errordocs: no
      galaxy_build_client: no
      galaxy_manage_systemd: yes
      galaxy_manage_gravity: no
  tags: gravity
